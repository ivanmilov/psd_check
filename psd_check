#!/usr/bin/python3

from psd_tools import PSDImage
import sys
import os.path
import string
import tempfile

transtab = str.maketrans('', '', string.ascii_letters + string.digits + '_')
filename = ''
logfile = ''
has_printed = False
log_reset = True


def print_out_and_file(s):
    global log_reset
    global logfile

    print('\t', s)

    mode = 'a'
    if log_reset:
        mode = 'w'
        log_reset = False
    with open(logfile, mode) as f:
        print(s, file=f)


def check_and_rename(layer):
    name = layer.name.strip()
    res = name.translate(transtab)
    if len(res) > 0:
        for c in res:
            if(c.isspace()):
                name = name.replace(c, '_')
            else:
                name = name.replace(c, '')
    if layer.name != name:
        print_file_name()
        print_out_and_file(
            'rename [{}] -> [{}] ({})'.format(layer.name, name, res))
        layer.name = name


def check_same_name(layer, names):
    if not layer.is_group():
        if layer.name not in names:
            names[layer.name] = get_path(layer)
        else:
            print_file_name()

            new_name = layer.name
            i = 1
            while new_name in names:
                new_name = layer.name + '_' + f'{i}'
                i = i+1
            print_out_and_file(
                'rename [{}] -> [{}] (same name)'.format(get_path(layer), new_name))
            layer.name = new_name
            names[layer.name] = get_path(layer)


def get_path(layer):
    if layer.parent:
        return get_path(layer.parent) + '/' + layer.name

    return layer.name


def print_file_name():
    global has_printed
    if not has_printed:
        print(filename, ':')
        has_printed = True


def check(filename):
    global logfile
    global log_reset, has_printed

    if os.path.splitext(filename)[1].lower() == '.psd':
        psd = PSDImage.open(filename)
        base = os.path.splitext(os.path.basename(filename))[0]

        logfile = os.path.join(
            tempfile.gettempdir(), f'{base}.log')
        log_reset = True
        has_printed = False

        names = {}

        for l in psd.descendants():
            check_and_rename(l)
            check_same_name(l, names)

        psd.save(filename)


def check_bulk(path):
    for root, dirs, files in os.walk(path):
        for name in files:
            filename = os.path.join(root, name)
            check(name)


if __name__ == '__main__':
    if len(sys.argv) == 1:
        path = '.'
    else:
        path = sys.argv[1]

    if not os.path.exists(path):
        print(f'Err, wrong path [{path}]')
        exit(1)

    if os.path.isdir(path):
        check_bulk(path)
        exit(0)
    if os.path.isfile(path):
        check(path)
        exit(0)

    print(f'err, not a file [{path}]')
